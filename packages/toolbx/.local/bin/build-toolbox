#!/usr/bin/env bash

# Generic script to build toolbox images.
# Usage: build-toolbox <toolbox-name>
# Example: build-toolbox dev
#          build-toolbox podman

set -e # Exit immediately if a command exits with a non-zero status.
set -u # Treat unset variables as an error when substituting.
set -o pipefail # Return value of a pipeline is the value of the last command to exit with a non-zero status.

# Check if toolbox name argument is provided
if [ $# -ne 1 ]; then
    echo "Usage: $0 <toolbox-name>"
    echo "Example: $0 dev"
    echo "         $0 podman"
    exit 1
fi

TOOLBOX_NAME="$1"

# Define paths based on $HOME, expecting files in their stowed locations.
CONTAINERFILE_CONTEXT_DIR="${HOME}/.local/share/toolbx/containers/${TOOLBOX_NAME}"
CONTAINERFILE_PATH="${CONTAINERFILE_CONTEXT_DIR}/Containerfile"
IMAGE_TAG="${TOOLBOX_NAME}-toolbox"
BUILD_CONTAINER="podman-toolbox"

# Check if Containerfile exists
if [ ! -f "${CONTAINERFILE_PATH}" ]; then
    echo "Error: Containerfile not found at ${CONTAINERFILE_PATH}"
    echo "Please ensure your 'toolbx' stow package has been stowed correctly to this location."
    SCRIPT_REAL_PATH=$(realpath "$0")
    echo "Build script is located at (source): ${SCRIPT_REAL_PATH}"
    exit 1
fi

echo "Building image '${IMAGE_TAG}'..."
echo "Context directory: ${CONTAINERFILE_CONTEXT_DIR}"
echo "Containerfile: ${CONTAINERFILE_PATH}"

# Check if podman-toolbox container exists and use it for the build
if podman ps -a --format "{{.Names}}" | grep -Fxq "${BUILD_CONTAINER}"; then
    echo "Using ${BUILD_CONTAINER} for the build..."
    if toolbox run -c "${BUILD_CONTAINER}" -- podman build -t "${IMAGE_TAG}" -f "${CONTAINERFILE_PATH}" "${CONTAINERFILE_CONTEXT_DIR}"; then
        echo "Successfully built '${IMAGE_TAG}' using ${BUILD_CONTAINER}."
    else
        echo "Error: Failed to build '${IMAGE_TAG}' using ${BUILD_CONTAINER}."
        exit 1
    fi
else
    echo "${BUILD_CONTAINER} not found, building directly with host podman..."
    if podman build -t "${IMAGE_TAG}" -f "${CONTAINERFILE_PATH}" "${CONTAINERFILE_CONTEXT_DIR}"; then
        echo "Successfully built '${IMAGE_TAG}'."
    else
        echo "Error: Failed to build '${IMAGE_TAG}'."
        exit 1
    fi
fi

exit 0
